import UIKit

var str = "Hello, playground"

//変数とは?復習とPHPとSwiftの違いの部分を説明する。
//データを入れる箱。

//変数の使い方
//①変数を宣言する
//②変数に値を代入する
var x = 2
//③値を取り出す
print(x)

//変数を使うメリット
//変数を使うことによって、プログラムを変更する際の手間を省ける。




//「Swift」における変数の宣言の仕方
//2種類
var y = 2 //後から変更できる
let z = 2 //後から変更できない


//「y」に3を代入してもエラーは出ないけど、「z」に3を入れるとエラーがでる。「z」は「let」で宣言されており、定数なので変更できない。

/*
y = 3
z = 3
*/

//=>変更されたくない値を宣言する際は、「let」を使う。値が変更された時に、エラーを吐き出してくれるので、予期しない値の変更に気づくことができる。=> プログラムの安全性(アプリのクラッシュを事前に防げる)


//型の指定
//変数を宣言する際にデータの型を指定できる。
//どんなデータ型があった?

//文字列型
var mozi:String = "mozi"
//整数型
var seisu:Int = 9
//小数点型
var syousu:Float = 3.14
//論理型
var ronri:Bool = true
//配列型
var hairetu:[String] = ["ペンギン","パンダ","ハリネズミ"]
hairetu[2]
//ディクショナリー型
var dictionary:[String:String] = ["ペンギン":"Penguin","パンダ":"Panda","ハリネズミ":"Hedgehog"]
dictionary["ハリネズミ"]

//オプショナル型
//後で。


//型を指定することによるメリット。
//指定した型以外のデータが入るとエラーを吐き出してくれる。
var name:String = "Yuki"//違う値のデータを入れるとエラーがでる。
var age:Int = 23
var tall:Float = 167.7




//コンパイルの説明。必要なら。




//他に.「Int」「Int8」「Int16」「Int32」「Int64」
//それぞれの違いは? -> 使用するメモリが違う。

var a:Int8 = 127 //「-128 〜 127」デーたを表せる。
var b:Int16 = 128// 「-2の15乗 〜 2の15乗」

//overflows -> 用意しているメモリでは表すことができない。
//うまいこと使えばメモリの節約ができる。





//まとめ
//変数とは、データを入れる箱
//変数を使うメリットは、プログラム変更時の手間を省ける。

//2つ
//変数の宣言の仕方は「var」と「let」。「var」は変更可能、「let」は変更不可能。
//変数の宣言の際、型を指定できる。

// => 事前にエラーを知らせてくれることによって、予期しないアプリのクラッシュを防ぐことができる。 => 安全。
// => メモリの効率的な利用





