import UIKit

var str = "Hello, playground"

//オブジェクト指向プログラミング
//オブジェクト(物)を一つの単位として、コードを書いていくプログラミング。


//重要語句4つ
// クラス：オブジェクト(物)の設計図
// プロパティ：オブジェクト(物)の性質、状態
// メソッド：オブジェクト(物)の動作
// インスタンス化：設計図を元にオブジェクト(物)を作ること



//書き方
//①設計図を作る
//②設計図を元にオブジェクトを作成する
//③作成したオブジェクトに命令を出す。




//例)車クラス--------------------------------
//車の設計図作成
class Car {
    //プロパティ
    var tire = 4//タイヤ4つ。
    //メソッド
    func run(){
        print("ここに走るために必要な処理が入る。")
    }
}

//インスタンス化
var car = Car()

//車を走らせる
car.run()


//例)とがみんクラス-----------------------------





//例)UILabel-----------------------------------
//①UILabelクラス(設計図の作成)
class UILabel{
    //プロパティ
    var text:String?
    var backgroundColor:UIColor?
}

//②インスタンス化。UILabelの設計図を元に、UILabelのオブジェクト(物)を作成。
var myLabel = UILabel()

//③プロパティの呼び出し。
myLabel.text = "とがみんブログ"
print(myLabel.text!)
//---------------------------------------------


//ViewControllerの説明
//クラス、プロパティ、メソッド説明




//メリット
//簡単にプログラムを書けちゃう。
// => 設計図の中身を理解していなくても、目的とするコードを書くことができる。
// => 設計図にあたる部分が、デフォルトで用意されていたり、ネット上でたくさん公開されている。




//まとめ-----------------------------------------
//オブジェクト指向プログラミングとは、オブジェクト(物)を一つの単位として、コードを書いていくプログラミング
//重要語句：クラス、プロパティ、メソッド、インスタンス化
//書き方3ステップ。
    //①設計図作る
    //②設計図を元にオブジェクトを作成する
    //③作成したオブジェクトに命令を出す
//---------------------------------------------










